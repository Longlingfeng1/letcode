给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321

 示例 2:

输入: -123
输出: -321

示例 3:

输入: 120
输出: 21

注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。


解答：
class Solution {
    public int reverse(int x) {
        long result=0;
        while(x!=0){
            int temp=x%10;
            result = result*10+temp;
            if(result>Integer.MAX_VALUE || result<Integer.MIN_VALUE){
                return 0;
            }
            x=x/10;
        }
        
        return (int)result;
    }
}

遗忘点：
1，Java集合（List，ArrayList等）只能存储对象（String，Integer），不能存储int等基本数据类型。
2, 整数反转可以一遍遍历实现 result=result*10+temp;
3, int的范围是 32 【-2^31——2^31-1】，即-2147483648——2147483647
4，result必须为long类型。
5，判断是否溢出  if(result>Integer.MAX_VALUE || result<Integer.MIN_VALUE) 对应【-2^31——2^31-1】 即-2147483648——2147483647
