给定一个非负整数 numRows，生成杨辉三角的前 numRows 行。



在杨辉三角中，每个数是它左上方和右上方的数的和。

示例:

输入: 5
输出:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList(); 
        if(numRows<1)
            return result;
        List<Integer> init = new ArrayList();
        init.add(1);
        result.add(init);
        for(int i=1;i<numRows;i++){
            List<Integer> row=new ArrayList();
            List<Integer> preRow = result.get(i-1);
            row.add(1);
            for(int j=1;j<i;j++){
                row.add(preRow.get(j-1)+preRow.get(j));
            }
            row.add(1);
            result.add(row);
        }
        return result;
    }
}

遗忘点：
list获取第i个元素， .get(i)
.add(num);
获取长度不能用.length. 而是用.size();
