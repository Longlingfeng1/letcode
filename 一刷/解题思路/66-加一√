给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。

最高位数字存放在数组的首位， 数组中每个元素只存储一个数字。

你可以假设除了整数 0 之外，这个整数不会以零开头。

示例 1:

输入: [1,2,3]
输出: [1,2,4]
解释: 输入数组表示数字 123。

示例 2:

输入: [4,3,2,1]
输出: [4,3,2,2]
解释: 输入数组表示数字 4321。

class Solution {
    public int[] plusOne(int[] digits) {
        for(int i=digits.length-1;i>=0;i--){
            if(i==0 && (digits[i]+1)>9){
                int[] result=new int[digits.length+1];
                digits[0]=0;
                result[0]=1;
                for(int j=1;j<digits.length+1;j++){
                    result[j]=digits[j-1];
                }
                return result;
            }
            if(digits[i]+1>9){
                digits[i]=0;
            }else{
                digits[i]+=1;
                break;
            }
            
        }
        return digits;
    }
}

注意如果第一位为9还需要进位时，需要数组长度+1；
初始化int数组 默认所有元素都为0；
