给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。

有效字符串需满足：

    左括号必须用相同类型的右括号闭合。
    左括号必须以正确的顺序闭合。

注意空字符串可被认为是有效字符串。

示例 1:

输入: "()"
输出: true

示例 2:

输入: "()[]{}"
输出: true

示例 3:

输入: "(]"
输出: false

示例 4:

输入: "([)]"
输出: false

示例 5:

输入: "{[]}"
输出: true

class Solution {
    public boolean isValid(String s) {
        Stack<String> stack=new Stack();
        for(int i=0;i<s.length();i++){
            char e=s.charAt(i);
            String str = String.valueOf(e);
            if(e=='(' || e=='{' || e=='['){
                stack.push(str);
            }
            if(e==')' || e=='}' || e==']'){
                if(stack.isEmpty())
                    return false;
                String p =stack.pop();
                if(p.equals("(")&&!str.equals(")"))
                    return false;
                if(p.equals("{")&&!str.equals("}"))
                    return false;
                if(p.equals("[")&&!str.equals("]"))
                    return false;
            }
        }
        if(!stack.isEmpty()){
            return false;
        }
               return true;
    }
}

遗忘点：
1，string转char .charAt(i)  char转string String str=String.valueOf(e);
2, Stack的使用。Stack<String> stack=new Stack(); Stack stack=new Stack(); stack.push(str),String str=stack.pop();
如果开始不指定泛型，默认为Object
